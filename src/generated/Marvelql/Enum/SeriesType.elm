-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Marvelql.Enum.SeriesType exposing (SeriesType(..), decoder, fromString, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| Filter the series by publication frequency type.

  - Collection - Filter the series with a collection publication frequency.
  - One\_shot - Filter the series with a one shot publication frequency.
  - Limited - Filter the series with a limited publication frequency.
  - Ongoing - Filter the series with a ongoing publication frequency.

-}
type SeriesType
    = Collection
    | One_shot
    | Limited
    | Ongoing


list : List SeriesType
list =
    [ Collection, One_shot, Limited, Ongoing ]


decoder : Decoder SeriesType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "collection" ->
                        Decode.succeed Collection

                    "one_shot" ->
                        Decode.succeed One_shot

                    "limited" ->
                        Decode.succeed Limited

                    "ongoing" ->
                        Decode.succeed Ongoing

                    _ ->
                        Decode.fail ("Invalid SeriesType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : SeriesType -> String
toString enum =
    case enum of
        Collection ->
            "collection"

        One_shot ->
            "one_shot"

        Limited ->
            "limited"

        Ongoing ->
            "ongoing"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe SeriesType
fromString enumString =
    case enumString of
        "collection" ->
            Just Collection

        "one_shot" ->
            Just One_shot

        "limited" ->
            Just Limited

        "ongoing" ->
            Just Ongoing

        _ ->
            Nothing
