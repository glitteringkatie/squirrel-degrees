-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Marvelql.Enum.CreatorOrderBy exposing (CreatorOrderBy(..), decoder, fromString, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| Order the result set by a field or fields. Multiple values are given priority in the order in which they are passed.
-}
type CreatorOrderBy
    = LastName_asc
    | FirstName_asc
    | MiddleName_asc
    | Suffix_asc
    | Modified_asc
    | LastName_desc
    | FirstName_desc
    | MiddleName_desc
    | Suffix_desc
    | Modified_desc


list : List CreatorOrderBy
list =
    [ LastName_asc, FirstName_asc, MiddleName_asc, Suffix_asc, Modified_asc, LastName_desc, FirstName_desc, MiddleName_desc, Suffix_desc, Modified_desc ]


decoder : Decoder CreatorOrderBy
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "lastName_asc" ->
                        Decode.succeed LastName_asc

                    "firstName_asc" ->
                        Decode.succeed FirstName_asc

                    "middleName_asc" ->
                        Decode.succeed MiddleName_asc

                    "suffix_asc" ->
                        Decode.succeed Suffix_asc

                    "modified_asc" ->
                        Decode.succeed Modified_asc

                    "lastName_desc" ->
                        Decode.succeed LastName_desc

                    "firstName_desc" ->
                        Decode.succeed FirstName_desc

                    "middleName_desc" ->
                        Decode.succeed MiddleName_desc

                    "suffix_desc" ->
                        Decode.succeed Suffix_desc

                    "modified_desc" ->
                        Decode.succeed Modified_desc

                    _ ->
                        Decode.fail ("Invalid CreatorOrderBy type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : CreatorOrderBy -> String
toString enum =
    case enum of
        LastName_asc ->
            "lastName_asc"

        FirstName_asc ->
            "firstName_asc"

        MiddleName_asc ->
            "middleName_asc"

        Suffix_asc ->
            "suffix_asc"

        Modified_asc ->
            "modified_asc"

        LastName_desc ->
            "lastName_desc"

        FirstName_desc ->
            "firstName_desc"

        MiddleName_desc ->
            "middleName_desc"

        Suffix_desc ->
            "suffix_desc"

        Modified_desc ->
            "modified_desc"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe CreatorOrderBy
fromString enumString =
    case enumString of
        "lastName_asc" ->
            Just LastName_asc

        "firstName_asc" ->
            Just FirstName_asc

        "middleName_asc" ->
            Just MiddleName_asc

        "suffix_asc" ->
            Just Suffix_asc

        "modified_asc" ->
            Just Modified_asc

        "lastName_desc" ->
            Just LastName_desc

        "firstName_desc" ->
            Just FirstName_desc

        "middleName_desc" ->
            Just MiddleName_desc

        "suffix_desc" ->
            Just Suffix_desc

        "modified_desc" ->
            Just Modified_desc

        _ ->
            Nothing
