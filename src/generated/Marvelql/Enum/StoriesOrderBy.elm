-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Marvelql.Enum.StoriesOrderBy exposing (StoriesOrderBy(..), decoder, fromString, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| Order the result set by a field or fields. Multiple values are given priority in the order in which they are passed.
-}
type StoriesOrderBy
    = Id_asc
    | Id_desc
    | Modified_asc
    | Modified_desc


list : List StoriesOrderBy
list =
    [ Id_asc, Id_desc, Modified_asc, Modified_desc ]


decoder : Decoder StoriesOrderBy
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "id_asc" ->
                        Decode.succeed Id_asc

                    "id_desc" ->
                        Decode.succeed Id_desc

                    "modified_asc" ->
                        Decode.succeed Modified_asc

                    "modified_desc" ->
                        Decode.succeed Modified_desc

                    _ ->
                        Decode.fail ("Invalid StoriesOrderBy type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : StoriesOrderBy -> String
toString enum =
    case enum of
        Id_asc ->
            "id_asc"

        Id_desc ->
            "id_desc"

        Modified_asc ->
            "modified_asc"

        Modified_desc ->
            "modified_desc"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe StoriesOrderBy
fromString enumString =
    case enumString of
        "id_asc" ->
            Just Id_asc

        "id_desc" ->
            Just Id_desc

        "modified_asc" ->
            Just Modified_asc

        "modified_desc" ->
            Just Modified_desc

        _ ->
            Nothing
