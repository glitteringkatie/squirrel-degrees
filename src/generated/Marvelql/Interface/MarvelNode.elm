-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Marvelql.Interface.MarvelNode exposing (Fragments, fragments, id, maybeFragments, modified, resourceURI, thumbnail)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode
import Marvelql.InputObject
import Marvelql.Interface
import Marvelql.Object
import Marvelql.Scalar
import Marvelql.ScalarCodecs
import Marvelql.Union


type alias Fragments decodesTo =
    { onCharacter : SelectionSet decodesTo Marvelql.Object.Character
    , onComic : SelectionSet decodesTo Marvelql.Object.Comic
    , onCreator : SelectionSet decodesTo Marvelql.Object.Creator
    , onEvent : SelectionSet decodesTo Marvelql.Object.Event
    , onSeries : SelectionSet decodesTo Marvelql.Object.Series
    , onStory : SelectionSet decodesTo Marvelql.Object.Story
    }


{-| Build an exhaustive selection of type-specific fragments.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo Marvelql.Interface.MarvelNode
fragments selections =
    Object.exhuastiveFragmentSelection
        [ Object.buildFragment "Character" selections.onCharacter
        , Object.buildFragment "Comic" selections.onComic
        , Object.buildFragment "Creator" selections.onCreator
        , Object.buildFragment "Event" selections.onEvent
        , Object.buildFragment "Series" selections.onSeries
        , Object.buildFragment "Story" selections.onStory
        ]


{-| Can be used to create a non-exhuastive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onCharacter = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onComic = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onCreator = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onEvent = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onSeries = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onStory = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }


{-| A unique ID to a particular marvel resource.
-}
id : SelectionSet (Maybe Marvelql.ScalarCodecs.Id) Marvelql.Interface.MarvelNode
id =
    Object.selectionForField "(Maybe ScalarCodecs.Id)" "id" [] (Marvelql.ScalarCodecs.codecs |> Marvelql.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


{-| The canonical URL identifier for a resource.
-}
resourceURI : SelectionSet (Maybe String) Marvelql.Interface.MarvelNode
resourceURI =
    Object.selectionForField "(Maybe String)" "resourceURI" [] (Decode.string |> Decode.nullable)


{-| The url path for a canonical photo to the resource
-}
thumbnail : SelectionSet (Maybe String) Marvelql.Interface.MarvelNode
thumbnail =
    Object.selectionForField "(Maybe String)" "thumbnail" [] (Decode.string |> Decode.nullable)


{-| A date for which the resource has been modified
-}
modified : SelectionSet (Maybe String) Marvelql.Interface.MarvelNode
modified =
    Object.selectionForField "(Maybe String)" "modified" [] (Decode.string |> Decode.nullable)
